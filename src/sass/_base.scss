// ——————————————————————————————————————————————————————————————————————————
//               Base: Variables, Mixins & Utilities
// ——————————————————————————————————————————————————————————————————————————

// ——————————————
//     Colors
// ——————————————

// Hexadecimals
$blue:                        #2196f3;
$blue-secondary:              #00b0ff;
$blue-dark:                   #37474f;
$gray:                        #bdbdbd;
$gray-dark:                   #757575;
$gray-light:                  #f2f2f2;
$gray-medium:                 #424242;
$red:                         #f44336;
$bg-red:                      #d84437;
$orange:                      #f4b400;
$green:                       #0f9d57;
$black:                       #212121;
$black-dark:                  #151515;

// RGB
$blue-rgb:                    rgb(33, 150, 243);
$blue-secondary-rgb:          rgb(0, 176, 255);
$blue-dark-rgb:               rgb(55, 71, 79);
$gray-rgb:                    rgb(189, 189, 189);
$gray-dark-rgb:               rgb(117, 117, 117);
$gray-medium-rgb:             rgb(66, 66, 66);
$gray-light-rgb:              rgb(242, 242, 242);
$red-rgb:                     rgb(244, 67, 54);
$bg-red-rgb:                  rgb(216, 68, 55);
$orange-rgb:                  rgb(244, 180, 0);
$green-rgb:                   rgb(15, 157, 87);
$black-rgb:                   rgb(33, 33, 33);
$black-dark-rgb:              rgb(21, 21, 21);

// Names
$active:                      $blue;
$link-secondary:              $blue-secondary;
$link-primary:                $gray;
$btn-primary:                 $red;
$bg-pattern:                  $bg-red;
$bg-primary:                  $gray-light;
$title-secondary:             $orange;
$subtitle-primary:            $gray-dark;
$bg-secondary:                $blue-dark;
$bg-other:                    $green;
$bg-dark:                     $black;
$bg-dark-light:               $gray-medium;
$bg-more-dark:                $black-dark;



// ——————————————————————
//     Mixins
// ——————————————————————


//
// Gradient
//

// Background Images
@mixin path ($rulers...) {
  background-image: url("../../dist/images/"+$rulers);
}

@mixin linear-gradient ($angle, $startColor, $endColor) {
  background-color: $startColor;
  background-image: -webkit-linear-gradient($angle, $startColor, $endColor);
  background-image:    -moz-linear-gradient($angle, $startColor, $endColor);
  background-image:     -ms-linear-gradient($angle, $startColor, $endColor);
  background-image:      -o-linear-gradient($angle, $startColor, $endColor);
  background-image:         linear-gradient($angle, $startColor, $endColor);
}

@mixin linear-gradient-control($angle, $colour, $position, $colour2, $position2) {
 background-color:  $colour;
 background-image:  -webkit-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:    -moz-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:     -ms-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:      -o-linear-gradient($angle, $colour $position, $colour2 $position2);
  background-image:          linear-gradient($angle, $colour $position, $colour2 $position2);
}

// Text Truncate
@mixin truncate {
  white-space: pre-line;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Transition
@mixin transition($property, $time, $method, $delay){
  -webkit-transition: $property $time $method $delay;
     -moz-transition: $property $time $method $delay;
      -ms-transition: $property $time $method $delay;
       -o-transition: $property $time $method $delay;
          transition: $property $time $method $delay;
}

// Border-Radius
@mixin bdr($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

//
// Shadow
//

// box-shadow
@mixin bsd($x, $y, $color) {
  -webkit-box-shadow: $x $y $color;
     -moz-box-shadow: $x $y $color;
      -ms-box-shadow: $x $y $color;
       -o-box-shadow: $x $y $color;
          box-shadow: $x $y $color;
}

@mixin bsd-multiples($rulers...) {
  -webkit-box-shadow: $rulers;
     -moz-box-shadow: $rulers;
      -ms-box-shadow: $rulers;
       -o-box-shadow: $rulers;
          box-shadow: $rulers;
}

// text-shadow
@mixin tsd($x, $y, $blur, $color) {
  -webkit-text-shadow: $x $y $blur $color;
     -moz-text-shadow: $x $y $blur $color;
      -ms-text-shadow: $x $y $blur $color;
       -o-text-shadow: $x $y $blur $color;
          text-shadow: $x $y $blur $color;
}

//
// Translate
//

// translateY
@mixin translateY($value) {
  -webkit-transform: translateY($value);
     -moz-transform: translateY($value);
      -ms-transform: translateY($value);
       -o-transform: translateY($value);
          transform: translateY($value);
}

// translateX
@mixin translateX($value) {
  -webkit-transform: translateX($value);
     -moz-transform: translateX($value);
      -ms-transform: translateX($value);
       -o-transform: translateX($value);
          transform: translateX($value);
}

// translate3d
@mixin translate3d($valueX, $valueY, $valueZ) {
  -webkit-transform: translate3d($valueX, $valueY, $valueZ);
     -moz-transform: translate3d($valueX, $valueY, $valueZ);
      -ms-transform: translate3d($valueX, $valueY, $valueZ);
       -o-transform: translate3d($valueX, $valueY, $valueZ);
          transform: translate3d($valueX, $valueY, $valueZ);
}

// skew
@mixin skew($value) {
  -webkit-transform: skew($value);
     -moz-transform: skew($value);
      -ms-transform: skew($value);
       -o-transform: skew($value);
          transform: skew($value);
}

// rotate
@mixin rotate($value) {
  -webkit-transform: rotate($value);
     -moz-transform: rotate($value);
      -ms-transform: rotate($value);
       -o-transform: rotate($value);
          transform: rotate($value);
}

// transform-origin
@mixin origin($value) {
  -webkit-transform-origin: $value;
     -moz-transform-origin: $value;
      -ms-transform-origin: $value;
       -o-transform-origin: $value;
          transform-origin: $value;
}

// scale
@mixin scale3d($scaleX, $scaleY, $scaleZ) {
  -webkit-transform: scale($scaleX, $scaleY, $scaleZ);
     -moz-transform: scale($scaleX, $scaleY, $scaleZ);
      -ms-transform: scale($scaleX, $scaleY, $scaleZ);
       -o-transform: scale($scaleX, $scaleY, $scaleZ);
          transform: scale($scaleX, $scaleY, $scaleZ);
}

// animation
@mixin animation($rulers...){
  -webkit-animation: $rulers;
     -moz-animation: $rulers;
      -ms-animation: $rulers;
       -o-animation: $rulers;
          animation: $rulers;
}

// appearance
@mixin apr($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
      -ms-appearance: $value;
       -o-appearance: $value;
          appearance: $value;
}
